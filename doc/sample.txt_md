# 画面設計標準

## 1. はじめに
### 1.1 目的と適用範囲

### 1.2 対象ユーザーと利用シーン

### 1.3 用語定義
- **WCAG 2.1 AA**: ウェブコンテンツアクセシビリティガイドラインのレベルAA。障害者も利用しやすい設計基準。
- **ISO 9241-11**: ユーザビリティの国際標準。効果的、効率的、満足的な操作を定義。
- **ARIA**: アクセシビリティを強化するHTML属性。全盲向け支援ツール対応に使用。

## 2. 設計原則

### 2.1 ユーザビリティの基本原則
**要約**: 直感的、効率的、一貫性を重視し、ISO 9241-11とNielsenの原則を基に設計ルールを定義。

- **概要**: ユーザーが直感的に操作でき、効率的にタスクを完了し、一貫した体験を得られることを目指す。ISO 9241-11（効果的、効率的、満足的）およびNielsenの10原則を基に設計。
- **設計ルール**:
  #### 2.1.1 直感的（Intuitive）
  | ルール                  | 詳細                                      | 基準対応            |
  |-------------------------|------------------------------------------|---------------------|
  | ボタンのラベル          | 「保存」「キャンセル」など明確に          | Nielsen: 現実世界一致 |
  | 必須項目の明示          | 「*」マークや赤枠で表示                  | ISO 9241-11: 効果的 |
  | エラーメッセージ        | 具体的かつ行動指向（例: 「日付を...」） | Nielsen: エラー回復 |

  #### 2.1.2 効率的（Efficient）
  | ルール                  | 詳細                                      | 基準対応            |
  |-------------------------|------------------------------------------|---------------------|
  | ショートカット          | 頻用機能に（例: Ctrl+Sで保存）           | Nielsen: 柔軟性     |
  | デフォルト値            | 例: 今日の日付を自動入力                 | ISO 9241-11: 効率的 |
  | 1画面完結              | 入力→確認→保存を同一画面で              | Nielsen: 状態可視性 |

  #### 2.1.3 一貫性（Consistent）
  | ルール                  | 詳細                                      | 基準対応            |
  |-------------------------|------------------------------------------|---------------------|
  | デザイン統一            | ボタン色（例: プライマリ=青）            | Nielsen: 一貫性     |
  | ナビ配置                | 全ページで上部固定                       | ISO 9241-11: 満足的 |
  | メッセージ位置          | 画面上部中央に固定                       | Nielsen: ミニマル   |

  #### 2.1.4 注記
  > **注**: その他のフレームワーク（例: Material Design）の追加は検討予定。

### 2.2 アクセシビリティ基準（WCAG 2.1 AAレベルベース）
**要約**: 社内利用に特化し、低視力や色覚異常に対応する最低限の基準をWCAG 2.1 AA（ウェブアクセシビリティ基準）を基に適用。

- **概要**: 障害を持つユーザーの一部に対応しつつ、社内システムの実用性を優先。アクセシビリティとは、障害の有無に関わらず、どんな人でもシステムにアクセスし利用できるようにするための設計方針を指す。今回は社内限定利用を前提に、WCAG 2.1 AAレベルを基に必要最低限の基準を調整して適用。
- **障害と指針の対応**:
  | 障害種別       | 対応方針                              | 詳細・理由                                  |
  |----------------|---------------------------------------|---------------------------------------------|
  | **低視力**     | コントラスト比4.5:1、テキストサイズ調整 | 視認性を確保（WCAG 1.4.3対応）             |
  | **色覚異常**   | 色依存を避けた設計（例: アイコン併用） | 色以外の情報で機能理解可能（WCAG 1.4.1対応） |
  | **全盲**       | 対応しない（スクリーンリーダー非対応） | 社内利用者に全盲想定なし、ARIA不要         |
  | **身体障害**   | 対応しない（大きなクリック領域不要）   | 運動障害想定外、キーボードは一般向け       |
  | **難聴**       | 対応しない（音声情報なし）            | 音声実装なし、特別対応不要                 |
  | **知的障害**   | 対応しない（平易なメッセージは最小限） | 高度なエラー支援や簡易さは社内想定外       |
  | **高齢者**     | 対応しない（大きな文字等の特別対応不要）| 特別な配慮不要、一般社員向け設計           |
- **設計ルール**:
  - **知覚可能（Perceivable）**:
    - **対応障害**: 低視力、色覚異常。
    - テキストと背景のコントラスト比を4.5:1以上（例: #000000黒文字と#FFFFFF白背景、低視力対応）。
    - 画像に代替テキスト（alt属性）を付与（例: `<img src="save.png" alt="保存ボタン">`、色覚異常でも機能理解可能）。
    - **WCAG 2.1 AA基準（調整済み）**:
      - **1.4.3 コントラスト（最低）**: UI要素でコントラスト比を確保（低視力対応）。
      - **1.4.4 サイズ変更**: テキストを200%まで拡大可能（低視力対応、必須ではないが利点あり）。
  - **操作可能（Operable）**:
    - **対応対象**: 一般ユーザー（作業効率向上）。
    - キーボードだけで全操作が可能（例: Tabキーでフォーカス移動、Enterで実行、一般ユーザーの効率性確保）。
    - 自動再生アニメーションを3秒以内に停止可能（一般的な快適性確保）。
    - **WCAG 2.1 AA基準（調整済み）**:
      - **削除**: 2.4.5 複数の方法、2.4.6 見出しとラベル、2.4.7 フォーカス可視は身体障害や全盲向けのため除外。
  - **理解可能（Understandable）**:
    - **対応障害**: なし（知的障害は対象外だが、最低限の配慮は残す）。
    - 言語を明示（例: `<html lang="ja">`で日本語指定、一般的な標準）。
    - エラーメッセージを具体的に（例: 「日付を入力してください」、簡易さは求めず技術リテラシー差への配慮としてツールチップも活用）。
    - **WCAG 2.1 AA基準（調整済み）**:
      - **3.2.3 一貫したナビゲーション**: ナビ配置を統一（一般的な一貫性確保）。
      - **削除**: 3.2.4 一貫した識別、3.3.3 エラー修正の提案、3.3.4 エラー防止（法的・財務・データ）は知的障害や高齢者向けのため除外。
  - **堅牢（Robust）**:
    - **対応障害**: なし（全盲のスクリーンリーダー利用者は対象外）。
    - HTML/CSSを標準規格準拠（W3Cバリデーション通過）で多様な環境に対応（一般的な品質確保）。
    - **WCAG 2.1 AA基準（調整済み）**:
      - **削除**: 4.1.2 名前・役割・値（ARIA属性）は全盲向けのため除外。
- **注記**:
  > **注**: 社内限定利用が確定のため、対象外の障害は変更なし。お客様確認で再確認するが、範囲拡大は想定しない。社内Webシステムの利用者は一般社員に限定され、全盲、身体障害、知的障害、高齢者に特化した高度なアクセシビリティは想定外。一時的・状況的制約（例: 片手操作時のタップ領域44x44px確保）や高齢者対応（例: フォント200%拡大）は実装済みだが、特別な配慮は不要。キーボード操作は作業効率向上のため一般向けに採用。

### 2.3 レスポンシブデザインとデバイス対応
**要約**: PCを主軸に、タブレット・スマホでも利用可能とし、必要に応じて同一画面または専用画面を選択。

- **概要**: PCブラウザを主ターゲットとしつつ、スマホ、タブレットでの表示も対応。同一画面のレスポンシブ対応と専用画面の設計を使い勝手に応じて選択可能。一覧表の直接編集はレスポンシブ対応が難しい場合があるが、推奨事項として提示。
- **設計ルール**:
  - **ブレークポイント**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | フル機能、横並びレイアウト |
    | タブレット  | 768px～1023px | 縮小または横スクロール    |
    | スマホ      | 767px以下      | 同一画面または専用画面    |
  - **PCブラウザ対応**:
    - 最小解像度1280x720px、固定幅またはグリッド（最大幅1200px）。
    - **ツールバー**: 非表示（`toolbar=no`または全画面モード推奨）。操作の簡潔さを優先。
    - **メニューバー**: 非表示（`menubar=no`）。システム内ナビゲーションに依存。
    - **ステータスバー**: 表示（`status=yes`）。URLや読み込み状態を確認可能に。
    - **フレーム分割**: 禁止（`<frameset>`使用不可）。一貫したレイアウトと操作性を確保。
    - **ウィンドウ閉じる（×ボタン）**: 未保存データがある場合、確認ダイアログ（例: "保存していないデータがあります。閉じますか？"）を表示。"はい"で閉じ、"いいえ"でキャンセル。
    - 注記: ブラウザ設定はポップアップウィンドウ（`window.open`）や全画面モードで実装。`beforeunload`イベントで×ボタンの挙動を制御。
  - **タブレット対応**: PCベースで調整、必要に応じ専用レイアウト検討。
  - **スマートフォン対応**:
    - 同一画面: レスポンシブ対応（例: 単票は縦並び、一覧はカード化選択）。
    - 専用画面: 使い勝手を考慮し最適化（例: 一覧編集は別設計）。
- **注記**:
  > **注**: 一覧表の直接編集はレスポンシブ対応が難しい場合あり（推奨）。専用画面の工数はお客様確認で特定。

### 2.4 多言語対応と国際化
**要約**: 多言語対応（i18n）で柔軟な言語環境を提供、表示の一貫性を確保。

- **概要**: システムを多言語対応（i18n）とし、異なる言語環境での利用を可能にする。i18nとは国際化（Internationalization）の略で、システムを多言語・多地域対応可能にする設計プロセスを指す。
- **設計ルール**:
  - **テキスト管理**: ハードコーディングを避け、リソースファイル（例: JSON、YAML）で言語ごとのテキストを管理（例: `"save": {"ja": "保存", "en": "Save"}`）。
  - **レイアウト**: 文字列長の違いに対応し、固定幅を避ける（例: CSSで`min-width`や`flex`を使用）。
  - **エンコーディング**: UTF-8を採用し、多バイト文字（例: 日本語、中国語）をサポート。
  - **地域設定**: 日付や数値フォーマットはお客様確認後、必要に応じてlocale対応（例: "YYYY-MM-DD" vs "MM/DD/YYYY"、"1,234" vs "1.234"）。
  - **フォント**: 言語に応じたフォントを選択（例: 日本語はゴシック体、英語はサンセリフ）。
  - **言語切り替え**: 方法はお客様確認待ち（仮案: ヘッダーに言語選択ドロップダウン）。
  - **テスト**: 各言語での表示崩れや動作を確認。
- **注記**:
  > **注**: RTL言語（例: アラビア語）は非対応。多言語展開時は別途フォントを選定。翻訳の提供元やプロセスはアプリ作成時に決定。

## 3. 画面構成の基本

### 3.1 レイアウト構造（グリッドシステム、ゾーニング）
**要約**: 画面配置を統一し、直感的な操作を可能にする3領域構造とグリッドを定義。

- **概要**: 画面上の項目の配置ルールを定義し、ユーザーが直感的に操作できる構造を提供。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **基本レイアウト**:
    - PC向けに固定幅レイアウトを採用（必須）。最大幅は1200pxを推奨（解像度1280x720px以上を想定）。
    - 画面は「ヘッダー」「メインコンテンツ」「フッター」の3領域で構成（必須）。
    - 例: ヘッダー高さ80px、フッター高さ50px、メインコンテンツは残り領域を占有。
  - **グリッドシステム**:
    - 12列グリッドを推奨。列間余白（ガター）16px、左右余白（マージン）24px。
    - 理由: 12列は分割しやすく、タブレット/スマホでの調整が容易。
    - 例: PCでは入力フォーム3列（25%幅）、説明6列（50%幅）、ボタン3列（25%幅）。タブレットで6列ずつ縦に、スマホで12列縦並び。
  - **ゾーニング**:
    - **ナビゲーションエリア**: ヘッダー内に上部グローバルナビを配置（必須、左サイドバーはなし）。
    - **メインコンテンツエリア**: 中央に配置し、業務内容に応じた入力フォームやテーブルを格納（必須）。
    - **アクションエリア**: ボタン（保存、キャンセルなど）をメインコンテンツ下部右側に配置（必須）。
    - 例: データ入力画面では、上部にタイトル、中央にフォーム、下部右に「保存」「キャンセル」ボタン。
  - **一貫性と柔軟性**:
    - 全画面で3領域構造を維持（必須）。
    - 各システムはグリッドの使用有無やゾーン内の配置を業務ニーズに応じて調整可能。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 全幅1200pxを推奨、12列グリッドを推奨 |
    | タブレット  | 768px～1023px | 横スクロールまたは6列縦並びを推奨   |
    | スマホ      | 767px以下      | 12列縦並びを推奨、ボタンは下部中央、単票はレスポンシブまたは専用画面を選択可能 |
- **注記**:
  > **注**: レスポンシブ対応により、スマホ、タブレット、PCで表示可能。詳細は「2.3」参照。スマホ専用画面が必要な場合は別途設計を推奨。

### 3.2 ナビゲーション設計（グローバルナビ、サイドメニュー、パンくずリスト）
**要約**: 上部グローバルナビとパンくずリストで移動を支援、デバイス間で一貫性を確保。

- **概要**: ユーザーがシステム内で目的の画面や機能に容易に移動できるナビゲーション構造を定義。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **ナビゲーションの種類と配置**:
    - **グローバルナビ**: ヘッダー内に上部グローバルナビを配置（必須、左サイドバーは使用しない前提）。
    - 例: メニュー項目（「ホーム」「データ入力」「レポート」「設定」）をヘッダー上部に横並び。
    - **パンくずリスト**: メインコンテンツ上部に配置を推奨（例: ホーム > データ入力 > 新規登録）。
    - 注記: 上部ナビ採用はお客様確認後に確定。
  - **構造と表示**:
    - グローバルナビはフラット構造（1階層）を基本、項目数5～7を推奨。
    - ドロップダウンメニューで2階層まで対応可能。
  - **動作ルール**:
    - クリックで移動、ホバーでドロップダウン（PCのみ）を推奨。
    - 現在のページは視覚的に強調（例: 太字、下線）（必須）。
    - キーボード操作対応（Tabで移動、Enterで選択）（必須）。
  - **一貫性と柔軟性**:
    - 全画面でナビ配置を統一（必須）。
    - 各システムはメニュー項目を業務ニーズに応じて調整可能。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 横並びメニューを推奨                 |
    | タブレット  | 768px～1023px | 横並び維持、項目数多い場合は折り畳み（ハンバーガーメニュー）を推奨 |
    | スマホ      | 767px以下      | ハンバーガーメニューに切り替え、縦リスト表示を推奨 |
- **注記**:
  > **注**: レスポンシブ対応により、スマホでハンバーガーメニュー化。詳細は「2.3」参照。

### 3.3 ヘッダー・フッター設計
**要約**: ヘッダーとフッターで一貫した操作基盤を提供。

- **概要**: ヘッダーとフッターの役割と構成を定義し、一貫した操作基盤を提供。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **ヘッダー**:
    - **役割**: システム名、グローバルナビ、ユーザー情報、ログアウトボタンを配置（必須）。
    - **構成**:
      - 左側: システム名またはロゴ（必須）。
      - 中央: 上部グローバルナビ（「3.2」参照）（必須）。
      - 右側: ユーザー名とログアウトボタン（必須）。
    - **デザイン**: 高さ80pxを推奨、背景薄グレー（例: #F5F5F5）、文字黒。
    - **動作**: 固定表示（必須）、キーボード操作対応（必須）。
  - **フッター**:
    - **役割**: 補助情報（著作権、バージョン、ヘルプ）を配置（必須）。
    - **構成**: 中央に著作権、右にバージョンとヘルプを推奨。
    - **デザイン**: 高さ50pxを推奨、背景薄グレー（例: #F5F5F5）。
    - **動作**: 固定表示（必須）。
  - **一貫性と柔軟性**:
    - 全画面で高さ、配置、色を統一（必須）。
    - 各システムは内容を調整可能。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 横並びレイアウトを推奨               |
    | タブレット  | 768px～1023px | ナビを折り畳み、高さ縮小（例: 60px）を推奨 |
    | スマホ      | 767px以下      | ナビをハンバーガーメニュー化、フッターは縦並びを推奨 |
- **注記**:
  > **注**: レスポンシブ対応により、スマホで簡略化。詳細は「2.3」参照。

### 3.4 コンテンツエリアの配置ルール
**要約**: メインコンテンツをZ字型配置で効率的に表示。

- **概要**: メインコンテンツエリアに業務内容を表示し、効率的な操作を定義。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **役割と構成**:
    - ヘッダーとフッター間に位置し、業務要素（フォーム、テーブル、ボタン）を格納（必須）。
    - 例: データ入力画面（タイトル、パンくずリスト、フォーム、ボタン）。
  - **配置ルール**:
    - **上部**: 画面タイトルとパンくずリストを推奨。
    - **中央**: 主要コンテンツ（フォーム、テーブルなど）。12列グリッドを推奨、左右余白24px（必須）。
    - **下部右側**: アクションボタン（例: "保存""キャンセル"）（必須）。
  - **構造と優先度**:
    - Z字型配置（左上から右下へ）を推奨。
    - 重要要素は視覚的に強調（必須）。
  - **一貫性と柔軟性**:
    - Z字型パターンを統一（推奨）。
    - コンテンツ種類やボタン数は調整可能。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 12列グリッドで横並びを推奨           |
    | タブレット  | 768px～1023px | 6列ずつ縦並びまたは横スクロールを推奨 |
    | スマホ      | 767px以下      | 12列で縦並びを推奨、ボタンは下部中央、単票はレスポンシブ、編集一覧は専用画面を選択可能 |
- **注記**:
  > **注**: レスポンシブ対応により、スマホで縦並び化。編集一覧は専用画面を推奨。詳細は「2.3」参照。

## 4. UIコンポーネント

### 4.1 ボタン（種類、状態、配置ルール）
**要約**: 操作ボタンを用途別に定義、色はアプリごとに選択。

- **概要**: 操作を実行するボタンを定義。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。色はプライマリ、セカンダリ、危険の用途ごとにアプリで選択、以下は例示。
- **設計ルール**:
  - **種類**:
    - **プライマリカラー**: 主操作（例: 保存）（必須）。
    - **セカンダリカラー**: 補助操作（例: キャンセル）（必須）。
    - **危険カラー**: 破壊的操作（例: 削除）（必須）。
    - **アイコン付き**: MDI採用（例: `mdi-content-save`）を推奨。
    | 種類         | 用途            | 色例（参考） |
    |--------------|-----------------|--------------|
    | プライマリ   | 主操作（保存）  | 青 #0078D4   |
    | セカンダリ   | 補助（キャンセル） | グレー #6C757D |
    | 危険         | 破壊的（削除）  | 赤 #DC3545   |
  - **状態**:
    - 通常、ホバー（PCのみ）、押下、無効を推奨。
  - **配置ルール**:
    - 「3.4」に基づき、下部右側（必須）。
  - **デザイン**:
    - 高さ40px、幅可変（最小100px）を推奨。
    - 余白左右16px、アイコンとテキスト間8pxを推奨。
  - **代表的なボタンの一覧**:
    | 操作       | アイコン名            | キャプション | 種類         |
    |------------|-----------------------|--------------|--------------|
    | 保存       | `mdi-content-save`    | "保存"       | プライマリ   |
    | キャンセル | `mdi-close`           | "キャンセル" | セカンダリ   |
    | 削除       | `mdi-trash-can`       | "削除"       | 危険         |
    | 確定       | `mdi-check`           | "確定"       | プライマリ   |
    | 戻る       | `mdi-arrow-left`      | "戻る"       | セカンダリ   |
    | 更新       | `mdi-refresh`         | "更新"       | セカンダリ   |
    | 追加       | `mdi-plus`            | "追加"       | プライマリ   |
    | 編集       | `mdi-pencil`          | "編集"       | プライマリ   |
    | 検索       | `mdi-magnify`         | "検索"       | プライマリ   |
    | 印刷       | `mdi-printer`         | "印刷"       | プライマリ   |
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 高さ40pxを推奨           |
    | タブレット  | 768px～1023px | 高さ36pxを推奨           |
    | スマホ      | 767px以下      | 高さ44px（タップしやすく）、幅100%で縦並びを推奨 |
- **注記**:
  > **注**: 色はアプリごとに選択、例示は参考（「5.1」参照）。多言語対応時、テキスト長に応じて幅を柔軟に調整。「2.4」に準拠。

### 4.2 入力フォーム（テキストフィールド、ドロップダウン、チェックボックスなど）
**要約**: データ入力用のフォームを統一設計。

- **概要**: データ入力用のフォームを定義。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **種類**:
    - **テキストフィールド**:
      - **半角文字**: `<input type="text" inputmode="numeric">`（必須）。
      - **半角数値**: `<input type="text" inputmode="numeric">`（必須）。
      - **日付**: `<input type="date">`（必須）。
      - **他自由入力**: `<input type="text">`（必須）。
    - **ドロップダウン**: `<select>`（必須）。
    - **チェックボックス**: `<input type="checkbox">`（必須）。
    - **ラジオボタン**: `<input type="radio">`（必須）。
    - **日付ピッカー**: `<input type="date">`（必須）。
    - **ファイル選択**: `<input type="file">`（必須）。ファイルアップロード用（例: 画像、PDF）。
  - **必須項目の扱い**:
    - ラベルに「*」、未入力時にエラー表示（必須）。
  - **デザイン**:
    - 高さ40px、幅可変（最小200px、ファイル選択は300px推奨）を推奨。
    - 枠線グレー（#CCCCCC）、フォーカス時プライマリ、エラー時危険を推奨。
    - ファイル選択は「ファイルを選択」ボタンとファイル名表示エリアを併用（必須）。
  - **配置ルール**:
    - コンテンツエリア中央、12列グリッドを推奨（必須）。
  - **状態と動作**:
    - 通常、フォーカス、無効、エラーを推奨。
    - キーボード操作対応（ファイル選択はTabで移動、Enterでダイアログ起動）（必須）。
    - ファイル選択は複数選択可否を仕様で明示（デフォルトは単一）を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 横並びを推奨             |
    | タブレット  | 768px～1023px | 6列ずつ縦並びを推奨      |
    | スマホ      | 767px以下      | 12列で縦並び、高さ44pxを推奨（単票としてレスポンシブ対応） |
- **注記**:
  > **注**: IME制御は行わず、ブラウザのデフォルト動作に依存。半角数値/文字は`inputmode`で対応、必要なら`pattern`で補強。ファイル選択はアップロード上限（例: 10MB）や許可拡張子をシステム仕様で定義。多言語対応時、ラベルやプレースホルダーのテキストをリソースファイルで管理。「2.4」に準拠。

### 4.3 テーブル・リスト（ソート、フィルタリング、ページネーション）
**要約**: データ一覧を閲覧・編集可能に設計。

- **概要**: データを一覧形式で表示し、閲覧と編集を可能にするテーブルを定義。PCブラウザを主ターゲットとしつつ、スマホ、タブレットに対応。編集が必要な場合はスマホ専用画面を設計。
- **設計ルール**:
  - **役割と構成**:
    - **チェックボックス列**: 左端に配置、行選択用。各行に`<input type="checkbox">`（必須）。
    - **ヘッダー**: 列名を表示（例: "選択""氏名""部署""入社日"）（必須）。ソート可能な列には矢印アイコン（例: MDI `mdi-arrow-up`/`mdi-arrow-down`）を推奨。
    - **行**: データエントリを表示。選択（ハイライト）および編集可能（必須）。
    - **列**: データ項目ごとに分割。幅は内容に応じて調整（例: "選択"50px、"氏名"200px）を推奨。
    - 例: 社員一覧テーブル（"選択""社員番号""氏名""部署""入社日"）。
  - **機能**:
    - **ソート**: ヘッダークリックで昇順/降順を切り替え。初期状態は未ソートを推奨。
    - **フィルタリング**: 検索ボックス（`<input type="text">`）でリアルタイム絞り込み。列ごとのフィルターはオプション。
    - **ページネーション**: 1ページ最大100件（仕様により100件未満も可）を推奨。100件超は「前」「次」ボタン（「4.1」準拠）とページ番号で分割。
    - **複数行操作**: チェックボックスで複数選択し、「削除」ボタン（「4.1」危険カラー）で一括削除を推奨。
    - **列幅調整**: ヘッダー境界をドラッグで幅変更可能（PCのみ）を推奨。
    - **列固定**: 画面仕様に応じ、複数列（例: "選択""社員番号"）を左端から固定表示可能。
    - **テキスト配置**: 列ごとに左寄せ、中央寄せ、右寄せを設定可能（例: "氏名"左寄せ、"入社日"右寄せ）を推奨。
  - **編集モード**:
    - **直に変更**: テーブル内で直接編集。セルクリックで選択、ダブルクリックまたは連続クリックで編集モードを推奨。
    - **別画面遷移**: 行選択後、「編集」ボタン（「4.1」プライマリ）で別画面へを推奨。
    - **保存トリガー**: 編集内容は「保存」ボタン（「4.1」プライマリ）押下で確定。一覧変更だけでは保存されない（必須）。
  - **デザイン**:
    - **サイズ**: 行の高さ48px、ヘッダー高さ56pxを推奨。幅はコンテンツエリアにフィット（必須）。
    - **色**: ヘッダー背景は薄グレー（例: #F5F5F5）、行背景は白、選択行はプライマリカラー薄（例: #E6F0FA）、編集中セルは枠線プライマリカラー（例: #0078D4）を推奨。
    - **フォント**: サイズ14px（ヘッダーは16px）、行間1.5倍を推奨。
    - **枠線**: 列間と行間に薄グレー（例: #E0E0E0）の1px線。固定列は右側に太線（例: 2px #CCCCCC）を推奨。
    - **ホバー**: 行背景を薄グレー（例: #F0F0F0）に変化（PCのみ）を推奨。
    - **余白**: セル内左右8px、上下4pxを推奨。
    - **フォーマット**: 日付は"YYYY-MM-DD"（例: "2025-04-08"）、数値はカンマ区切り（例: "1,234"）を推奨。
    - **テキスト配置**: CSSで`text-align: left/center/right`を列ごとに適用可能。
  - **配置ルール**:
    - 「3.4」に基づき、コンテンツエリア中央に配置。12列グリッドを活用し、テーブルは全幅（12列）を推奨。
    - フィルタリング検索ボックスはテーブル上部左、ページネーションは下部中央、複数行操作ボタン（例: "削除"）は下部右を推奨。
  - **テーブル内コントロール**:
    | コントロール       | 用途                  | 状態と動作                              |
    |--------------------|-----------------------|-----------------------------------------|
    | テキストフィールド | 氏名、備考など編集    | 通常: 表示のみ、編集: `<input type="text">`、エラー: 赤枠＋メッセージ |
    | ドロップダウン     | 部署選択など          | 通常: 表示のみ、編集: `<select>`で選択、フォーカス: リスト展開   |
    | チェックボックス   | 有効/無効など         | 通常: ON/OFF表示、編集: Spaceで切替、選択: ハイライト         |
    | ラジオボタン       | 状態選択（例: 性別）  | 通常: 表示のみ、編集: Spaceで選択、選択: 丸表示             |
  - **操作ルール（直に変更時）**:
    - **キーボード操作**:
      - Space: チェックボックスON/OFF、ボタン押下、ラジオ選択、ドロップダウン値選択（必須）。
      - Delete: 編集モード中はキャレット位置から1文字削除、以外はセル値全削除を推奨。
      - Esc: 編集キャンセル（Delete全削除は戻らず）、編集モード終了（必須）。
      - 矢印キー: 上下左右でセル移動を推奨。
      - Tab: セル間移動（左から右、上から下）（必須）。
    - **マウス操作**:
      - セルクリック: カーソル移動（選択）（必須）。
      - 同一セル再クリック/ダブルクリック: 編集モード開始を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 全機能対応、列幅調整、ホバー有効を推奨 |
    | タブレット  | 768px～1023px | 横スクロールで全列表示、列固定1列を推奨。ボタンやコントロールはサイズ縮小（例: 高さ36px） |
    | スマホ      | 767px以下      | 編集が必要な場合は専用画面、表示のみの場合は一覧（横スクロール）またはカード形式を選択可能 |
- **注記**:
  > **注**: 編集が必要な一覧画面はスマホ専用画面を推奨。表示のみの場合はレスポンシブで一覧またはカードを選択。詳細は「2.3」参照。スマホ専用画面の場合、開発工数が増加する可能性あり。

### 4.4 モーダルウィンドウとポップアップ
**要約**: 補助UIで操作や通知を支援。

- **概要**: メイン画面上に重ねて表示される補助UIを定義。PCを主ターゲットとしつつ、スマホ、タブレットに対応。モーダルは操作必須、ポップアップは非必須として使い分け。
- **設計ルール**:
  - **役割と用途**:
    - **モーダルウィンドウ**: ユーザーの操作を中断し、必須の応答を求める（例: 削除確認、詳細入力）（必須）。
    - **ポップアップ**: 一時的な通知や補助情報で、操作を強制しない（例: 成功メッセージ、ヘルプ）（必須）。
    - 例: "削除しますか？"（モーダル）、"保存しました"（ポップアップ）。
  - **デザイン**:
    - **サイズ**: 
      - モーダル: 幅600px、高さ400px（内容に応じて可変、最大80%画面サイズ）を推奨。
      - ポップアップ: 幅300px、高さ200px（固定）を推奨。
    - **色**: 
      - 背景は白（#FFFFFF）、枠線薄グレー（#E0E0E0）、オーバーレイはグレー（rgba(0,0,0,0.5)）を推奨。
      - タイトルバー: 薄グレー（#F5F5F5）を推奨。
    - **フォント**: サイズ16px（タイトルは18px）、行間1.5倍を推奨。
    - **構成**:
      - **モーダル**: タイトルバー（例: "確認"）、コンテンツエリア、ボタンエリア（"OK""キャンセル"）（必須）。
      - **ポップアップ**: コンテンツのみ、閉じるボタン（右上、`mdi-close`）（必須）。
    - **影**: ボックスシャドウ（例: 0 4px 8px rgba(0,0,0,0.1)）を推奨。
  - **動作ルール**:
    - **表示トリガー**: 
      - モーダル: ボタンクリック（例: "削除"押下）（必須）。
      - ポップアップ: 自動（例: 保存完了時）またはボタンクリックを推奨。
    - **閉じる方法**:
      - モーダル: "キャンセル"ボタン、Escキー（オーバーレイクリックでは閉じない）（必須）。
      - ポップアップ: 閉じるボタン、オーバーレイクリック、3秒後の自動閉じ（通知の場合）を推奨。
    - **キーボード操作**:
      - 表示時にフォーカスをモーダル/ポップアップ内に移動（必須）。
      - Tabで内部要素間移動、Enterでボタン押下、Escで閉じる（必須）。
  - **配置ルール**:
    - 画面中央に配置。固定位置（`position: fixed`）（必須）。
    - オーバーレイで背面を暗くし、視覚的強調（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 標準サイズ（モーダル600px、ポップアップ300px）を推奨 |
    | タブレット  | 768px～1023px | 幅80%に縮小、高さは内容に依存を推奨 |
    | スマホ      | 767px以下      | 編集が必要な場合は専用画面内で再設計（例: フルスクリーン）、表示のみの場合は幅90%、高さ最大80%、縦スクロール可を推奨 |
- **注記**:
  > **注**: 編集が必要な一覧画面に関連する場合、スマホ専用画面内でモーダル/ポップアップを設計を推奨。表示のみはレスポンシブ対応。詳細は「2.3」参照。アクセシビリティ（例: コントラスト比4.5:1、フォーカス管理）は2.2に準拠。`<dialog>`タグ活用を推奨。色は「5.1」、ボタンは「4.1」に準拠。多言語対応時、タイトルやボタンテキストをリソースファイルで管理。「2.4」に準拠。

### 4.5 アラート・通知（エラー、警告、成功メッセージ）
**要約**: 操作結果を視覚的に通知。

- **概要**: 操作結果や状態変化をユーザーに通知するカスタムUI要素を定義。JavaScriptの`alert()`ではなく、`<div>`等のHTML要素でデザイン・動作を制御する。理由として、`alert()`はデザインのカスタマイズ性が低く、操作を完全にブロックするため業務システムの柔軟性やユーザビリティに適合しない。一方、カスタム要素は視覚的統一性、動作の柔軟性、複数表示対応が可能。PCを主ターゲットとしつつ、スマホ、タブレットに対応。重要通知（エラー、警告、成功）と軽微通知（トースト）を定義。
- **設計ルール**:
  - **種類と用途**:
    - **エラー（重要通知）**: 操作失敗や入力ミスを通知（例: "必須項目が未入力です"）（必須）。
    - **警告（重要通知）**: 注意喚起や確認が必要な状況を通知（例: "データが上書きされます"）（必須）。
    - **成功（重要通知）**: 重要な操作完了を通知（例: "データ更新が完了しました"）（必須）。
    - **トースト（軽微通知）**: 軽微な操作完了や一時情報を通知（例: "コピーしました"）（必須）。
  - **重要通知（エラー、警告、成功）**:
    - **デザイン**:
      - **サイズ**: 幅は内容に応じて可変（最小300px、最大80%画面幅）、高さは内容依存（最小50px）を推奨。
      - **色とアイコン**:
        - **エラー**: 背景薄赤（#F8D7DA）、枠線赤（#DC3545）、アイコン`mdi-alert-circle`を推奨。
        - **警告**: 背景薄黄（#FFF3CD）、枠線黄（#FFC107）、アイコン`mdi-alert`を推奨。
        - **成功**: 背景薄緑（#D4EDDA）、枠線緑（#28A745）、アイコン`mdi-check-circle`を推奨。
      - **フォント**: サイズ16px、行間1.5倍、色黒（#000000）を推奨。
      - **構成**: 左にアイコン、中央にメッセージ、右に閉じるボタン（`mdi-close`）（必須）。
      - **影**: ボックスシャドウ（例: 0 4px 8px rgba(0,0,0,0.1)）を推奨。
    - **動作ルール**:
      - **表示トリガー**: 
        - エラー: 操作失敗時（例: "保存"押下で未入力検出）（必須）。
        - 警告: 操作前確認（例: "削除"押下時）（必須）。
        - 成功: 重要操作完了時（例: データ更新成功）（必須）。
      - **表示位置**: 
        - 画面上部中央に固定（`position: fixed`、top: 20px）（必須）。
        - 複数表示時は縦にスタック（間隔16px）を推奨。
      - **閉じる方法**: 閉じるボタン（右上、`mdi-close`）、クリックまたはEscキー。全て手動閉じ（見逃し防止）（必須）。
      - **キーボード操作**: 表示時にフォーカスを通知内に移動、Tabで閉じるボタン選択、Enter/Escで閉じる（必須）。
    - **レスポンシブ対応**:
      | デバイス    | 幅範囲         | 対応方針                  |
      |-------------|----------------|---------------------------|
      | PC          | 1024px以上     | 幅300px～80%、高さ内容依存を推奨 |
      | タブレット  | 768px～1023px | 幅80%、高さ調整を推奨    |
      | スマホ      | 767px以下      | 幅90%、高さ最大80%、必要に応じ縦スクロールを推奨 |
  - **トースト（軽微通知）**:
    - **デザイン**:
      - **サイズ**: 幅は内容に応じて可変（最小200px、最大50%画面幅）、高さは内容依存（最小40px）を推奨。
      - **色とアイコン**: 背景グレー（#6C757D）、文字白（#FFFFFF）、アイコンなし（オプションで`mdi-information`可）を推奨。
      - **フォント**: サイズ14px、行間1.5倍を推奨。
      - **構成**: メッセージのみ、閉じるボタンなし（必須）。
      - **影**: ボックスシャドウ（例: 0 2px 4px rgba(0,0,0,0.2)）を推奨。
    - **動作ルール**:
      - **表示トリガー**: 軽微な操作完了時（例: クリップボードへのコピー成功）（必須）。
      - **表示位置**: 画面右下に固定（`position: fixed`、bottom: 20px、right: 20px）を推奨。
      - **閉じる方法**: 3秒後に自動閉じ（手動閉じなし）を推奨。
      - **キーボード操作**: フォーカス移動なし（操作を妨げない）（必須）。
    - **レスポンシブ対応**:
      | デバイス    | 幅範囲         | 対応方針                  |
      |-------------|----------------|---------------------------|
      | PC          | 1024px以上     | 幅200px～50%、高さ内容依存を推奨 |
      | タブレット  | 768px～1023px | 幅50%、右下維持を推奨    |
      | スマホ      | 767px以下      | 幅80%、中央下に調整（bottom: 20px、left: 50%、transform: translateX(-50%)）を推奨 |
  - **表示優先度**:
    - エラー > 警告 > 成功 > トーストの順で上位表示（必須）。
- **注記**:
  > **注**: エラーや警告がモーダルウィンドウで表示される場合、「4.4」に準拠。アクセシビリティ（コントラスト比4.5:1、フォーカス管理）は「2.2」に準拠。ただし、トーストはフォーカス不要。多言語対応時、メッセージはリソースファイルで管理（「2.4」参照）。色は「5.1」、アイコンは「4.6」（未定義時はMDI準拠）に準拠。

### 4.6 アイコンとビジュアル要素
**要約**: 直感性を高めるアイコンを定義。

- **概要**: UI全体の直感性と視覚的統一性を高めるためのアイコンと装飾要素を定義。アイコンはボタン、通知、ナビゲーションなど多用途で使用。Material Design Icons（MDI）を標準としつつ、カスタムアイコンも許容。PCを主ターゲットとし、スマホ、タブレットに対応。
- **設計ルール**:
  - **アイコン**:
    - **種類と用途**:
      - **操作系**: ボタンや機能を示す（例: `mdi-content-save`で保存、`mdi-trash-can`で削除）。「4.1」に準拠（必須）。
      - **状態系**: 通知や状況を示す（例: `mdi-check-circle`で成功、`mdi-alert`で警告）。「4.5」に準拠（必須）。
      - **ナビゲーション系**: 移動や方向を示す（例: `mdi-arrow-left`で戻る、`mdi-menu`でメニュー）（必須）。
    - **デザイン**:
      - **サイズ**:
        - **ボタン内**: 20px（「4.1」準拠、高さ40pxにフィット）を推奨。
        - **通知内**: 24px（「4.5」準拠、視認性確保）を推奨。
        - **一覧や単独**: 24px（例: テーブル「4.3」、ナビ「3.2」）を推奨。
        - **その他**: 最小16px、推奨20px～24px（状況に応じて調整）。
      - **色**: デフォルト黒（#000000）、状態に応じて変化（例: エラー赤 #DC3545、成功緑 #28A745）を推奨。
      - **スタイル**: 単色（filled）で統一、輪郭線（outline）は状況に応じて使用可（推奨）。
      - **余白**: アイコンとテキスト間8px、単独使用時は周囲4px（スマホでは8px推奨）を推奨。
    - **使用ルール**:
      - MDIを標準とし、必要に応じてカスタムSVGを許可（例: 業務特化アイコン）（推奨）。
      - アイコン単独で意味が伝わる場合、テキスト省略可（例: `mdi-printer`で印刷）（推奨）。
      - ボタン（「4.1」）、通知（「4.5」）、その他UI要素と連携し、一貫性を確保（必須）。
    - **レスポンシブ対応**:
      - サイズは用途に応じて決定（上記参照）。
      - スマホでは最小タップ領域44x44pxを確保（アイコンサイズ＋余白で対応）（必須）。
  - **ビジュアル要素**:
    - **区切り線**:
      - **用途**: セクションや項目を分離（例: フォーム項目間、テーブル行間）（必須）。
      - **デザイン**: 太さ1px、色薄グレー（#E0E0E0）、スタイル実線を推奨。
      - **配置**: 上下左右の余白8pxを推奨。
    - **影**:
      - **用途**: 要素の浮き出しや強調（例: モーダル、通知）（必須）。
      - **デザイン**: ボックスシャドウ（例: 0 4px 8px rgba(0,0,0,0.1)）を推奨。
    - **背景パターン**:
      - **用途**: 視覚的区別（例: 無効状態の薄グレー背景）（必須）。
      - **デザイン**: 単色のみ採用、パターン（ストライプ等）は使用しない（推奨）。
    - **レスポンシブ対応**:
      - デバイス間で太さや影の強さを維持（スマホでも縮小せず）（必須）。
- **使用例**:
  - 保存ボタン: `mdi-content-save`（20px、青 #0078D4）＋"保存"（「4.1」）。
  - エラー通知: `mdi-alert-circle`（24px、赤 #DC3545）＋"必須項目が未入力です"（「4.5」）。
  - ナビ: `mdi-arrow-left`（24px、黒）で戻るリンク。
  - フォーム区切り: 1px実線（#E0E0E0）で項目を分離。
- **注記**:
  > **注**: アクセシビリティ（コントラスト比4.5:1）は「2.2」に準拠。アイコンに`alt`属性やARIAラベルを推奨（例: `<img src="save.svg" alt="保存">`）。多言語対応時、アイコンは言語に依存せず意味を統一（「2.4」参照）。色は「5.1」に準拠、MDI以外はお客様確認後に確定。

### 4.7 ラベル
**要約**: 入力項目の説明を統一。

- **概要**: 入力フォームや表示項目に付随する説明テキストを定義。PCを主ターゲットとしつつ、レスポンシブ対応でスマホ、タブレットにも適応。
- **設計ルール**:
  - **役割と用途**:
    - 入力フィールドやコントロールの目的を明示（例: "氏名" "部署"）（必須）。
    - 必須項目を強調（例: "氏名*"）（必須）。
  - **デザイン**:
    - **フォント**: サイズ14px、色黒（#000000）、必須項目は赤（#FF0000）で「*」を推奨。
    - **配置**: コントロールの上または左側（PCは左、タブレット/スマホは上推奨）を推奨。
    - **余白**: ラベルとコントロール間8pxを推奨。
  - **動作ルール**:
    - クリックで関連コントロールにフォーカス（`<label for="id">`使用）（必須）。
    - キーボード操作対応（Tabで移動時、ラベル読み上げ不要だが関連性明確）（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 左配置、横並びを推奨     |
    | タブレット  | 768px～1023px | 上配置、6列ずつ縦並びを推奨 |
    | スマホ      | 767px以下      | 上配置、12列で縦並びを推奨 |
- **注記**:
  > **注**: アクセシビリティ（例: コントラスト比4.5:1）は2.2に準拠。詳細は「2.3」参照。「4.2 入力フォーム」と連携し、一貫性を確保。多言語対応時、ラベルテキストをリソースファイルで管理。「2.4」に準拠。

## 5. 視覚デザイン

### 5.1 カラースキーム（ブランドカラー、コントラスト基準）
**要約**: 配色を用途別に定義、色はアプリごとに選択。

- **概要**: システム全体の配色を定義し、視覚的統一性と識別性を確保。ブランドカラーと状態カラーを設定し、WCAG 2.1 AA基準（SC 1.4.3 - Contrast Minimum）に従いコントラスト比4.5:1以上を満たす。PCを主ターゲットとし、スマホ、タブレットに対応。色はプライマリ、セカンダリ等の用途ごとにアプリで選択、以下は例示。
- **設計ルール**:
  - **色の種類と選び方**:
    | カテゴリ            | 用途                          | 色例（参考） | 選択基準                     |
    |---------------------|-------------------------------|--------------|------------------------------|
    | プライマリカラー    | 主操作や強調                  | 青 #0078D4   | ブランド反映、目立つ（必須） |
    | セカンダリカラー    | 補助操作や軽微通知            | グレー #6C757D | 控えめ、プライマリと調和（必須） |
    | 背景カラー          | メイン領域のベース            | 白 #FFFFFF   | 視認性高く、テキストが映える（必須） |
    | テキストカラー      | デフォルト文字色              | 黒 #000000   | 背景とコントラスト比4.5:1以上（必須） |
    | 枠線/区切り線カラー| 要素の分離                    | 薄グレー #E0E0E0 | 背景と差が小さく、控えめ（必須） |
  - **状態カラー（全システム共通）**:
    | 状態       | 用途                      | 色例（参考）               | 選択基準             |
    |------------|---------------------------|----------------------------|----------------------|
    | エラー     | 操作失敗や入力ミス        | 赤 #DC3545（枠線）、薄赤 #F8D7DA（背景） | 必須 |
    | 警告       | 注意喚起                  | 黄 #FFC107（枠線）、薄黄 #FFF3CD（背景） | 必須 |
    | 成功       | 操作完了                  | 緑 #28A745（枠線）、薄緑 #D4EDDA（背景） | 必須 |
    | 無効       | 使用不可                  | 薄グレー #CCCCCC（枠線・背景）          | 必須 |
    | ホバー     | マウス操作時の強調（PCのみ） | 薄青 #E6F0FA             | プライマリ/セカンダリの薄い派生色（必須） |
    | フォーカス | キーボード操作時の強調    | 薄青 #E6F0FA             | プライマリに影響、ホバーと類似（必須） |
  - **コントラスト基準**:
    - テキストと背景のコントラスト比は4.5:1以上（必須）。この基準はWCAG 2.1 AA（SC 1.4.3）に準拠し、通常テキストの視認性を確保。
    - **コントラスト比4.5:1とは**:
      - **どういうものか**: 前景（例: 文字）と背景の明るさ（輝度）の差を数値で表したもの。計算式は `(L1 + 0.05) / (L2 + 0.05)`（L1は明るい方の輝度、L2は暗い方の輝度）。4.5:1は前景が背景より4.5倍明るい（または暗い）ことを意味し、視認性を確保。
      - **なぜ必要か**: WCAG 2.1 AA基準で、低視力や色覚異常の人でもテキストや重要なUI要素を読めるようにするため。明るい環境や高齢者にも配慮し、誰にとっても見やすいデザインを実現。
      - **具体例**:
        | 判定 | テキスト色       | 背景色       | コントラスト比 | 説明                  |
        |------|------------------|--------------|----------------|-----------------------|
        | OK   | 黒 #000000       | 白 #FFFFFF   | 21:1           | 非常に見やすい        |
        | OK   | 中間グレー #767676 | 白 #FFFFFF   | 4.54:1         | 基準ぎりぎり          |
        | NG   | 薄いグレー #999999 | 白 #FFFFFF   | 2.32:1         | 見づらい              |
        | OK   | 白 #FFFFFF       | 青 #0078D4   | 5.74:1         | 現実例、基準を満たす  |
    - 状態カラーも背景とのコントラストを確保（例: #DC3545赤と#F8D7DA薄赤で4.63:1）（必須）。
    - **例外**: 大きなテキスト（18pt以上または14pt以上太字）は3:1以上、ロゴや装飾テキストは要件なし（WCAG 2.1 AA準拠）。
  - **使用ルール**:
    - プライマリは主操作（「4.1」ボタン）や強調に、セカンダリは補助操作（「4.1」）やトースト（「4.5」）に適用（必須）。
    - 状態カラーは通知（「4.5」）、入力エラー（「4.2」）、アイコン（「4.6」）に一貫して使用（必須）。
    - ホバーとフォーカスはプライマリを基調とし、視覚的関連性を保つ（必須）。
    - 背景とテキストは全画面で統一、例外はお客様確認後（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 色の鮮やかさやRGB値を維持           |
    | タブレット  | 768px～1023px | 同上、視認性確保                    |
    | スマホ      | 767px以下      | 背景白、文字黒を固定しコントラスト強化を推奨 |
    - デバイス間で色の鮮やかさやRGB値を維持し、視認性を確保（例: スマホでプライマリが薄くならないよう調整）（必須）。
  - **使用例**:
    | UI要素         | 適用カラー               | 色例（参考）               |
    |----------------|--------------------------|----------------------------|
    | 保存ボタン     | 背景: プライマリ、文字: テキスト | #0078D4（背景）、#FFFFFF（文字） |
    | エラー通知     | 枠線: エラー、背景: エラー背景 | #DC3545（枠線）、#F8D7DA（背景） |
    | フォーカス時   | 枠線: フォーカス         | #E6F0FA                   |
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、コントラスト比4.5:1を全要素で確保。多言語対応（「2.4」）時、色は言語に依存せず一貫。色はアプリごとに選択、例示は参考。お客様確認で確定。コントラスト比の計算にはWebツール（例: [WebAIM Contrast Checker](https://webaim.org/resources/contrastchecker/)）を推奨。


### 5.1 カラースキーム（ブランドカラー、コントラスト基準）
**要約**: 配色を用途別に定義、色はアプリごとに選択。

- **概要**: システム全体の配色を定義し、視覚的統一性と識別性を確保。ブランドカラーと状態カラーを設定し、アクセシビリティ基準（WCAG 2.1 AA、コントラスト比4.5:1）を満たす。PCを主ターゲットとし、スマホ、タブレットに対応。色はプライマリ、セカンダリ等の用途ごとにアプリで選択、以下は例示。
- **設計ルール**:
  - **色の種類と選び方**:
    | カテゴリ            | 用途                          | 色例（参考） | 選択基準                     |
    |---------------------|-------------------------------|--------------|------------------------------|
    | プライマリカラー    | 主操作や強調                  | 青 #0078D4   | ブランド反映、目立つ（必須） |
    | セカンダリカラー    | 補助操作や軽微通知            | グレー #6C757D | 控えめ、プライマリと調和（必須） |
    | 背景カラー          | メイン領域のベース            | 白 #FFFFFF   | 視認性高く、テキストが映える（必須） |
    | テキストカラー      | デフォルト文字色              | 黒 #000000   | 背景とコントラスト比4.5:1以上（必須） |
    | 枠線/区切り線カラー| 要素の分離                    | 薄グレー #E0E0E0 | 背景と差が小さく、控えめ（必須） |
  - **状態カラー（全システム共通）**:
    | 状態       | 用途                      | 色例（参考）               | 選択基準             |
    |------------|---------------------------|----------------------------|----------------------|
    | エラー     | 操作失敗や入力ミス        | 赤 #DC3545（枠線）、薄赤 #F8D7DA（背景） | 必須 |
    | 警告       | 注意喚起                  | 黄 #FFC107（枠線）、薄黄 #FFF3CD（背景） | 必須 |
    | 成功       | 操作完了                  | 緑 #28A745（枠線）、薄緑 #D4EDDA（背景） | 必須 |
    | 無効       | 使用不可                  | 薄グレー #CCCCCC（枠線・背景）          | 必須 |
    | ホバー     | マウス操作時の強調（PCのみ） | 薄青 #E6F0FA             | プライマリ/セカンダリの薄い派生色（必須） |
    | フォーカス | キーボード操作時の強調    | 薄青 #E6F0FA             | プライマリに影響、ホバーと類似（必須） |
  - **コントラスト基準**:
    - テキストと背景のコントラスト比は4.5:1以上（必須）。
    - **コントラスト比4.5:1とは**:
      - **どういうものか**: 前景（例: 文字）と背景の明るさ（輝度）の差を数値で表したもの。計算式は `(L1 + 0.05) / (L2 + 0.05)`（L1は明るい方の輝度、L2は暗い方の輝度）。4.5:1は前景が背景より4.5倍明るい（または暗い）ことを意味し、視認性を確保。
      - **なぜ必要か**: WCAG 2.1 AA基準で、低視力や色覚異常の人でもテキストや重要なUI要素を読めるようにするため。明るい環境や高齢者にも配慮し、誰にとっても見やすいデザインを実現。
      - **具体例**:
        | 判定 | テキスト色       | 背景色       | コントラスト比 | 説明                  |
        |------|------------------|--------------|----------------|-----------------------|
        | OK   | 黒 #000000       | 白 #FFFFFF   | 21:1           | 非常に見やすい        |
        | OK   | 中間グレー #767676 | 白 #FFFFFF   | 4.54:1         | 基準ぎりぎり          |
        | NG   | 薄いグレー #999999 | 白 #FFFFFF   | 2.32:1         | 見づらい              |
        | OK   | 白 #FFFFFF       | 青 #0078D4   | 5.74:1         | 現実例、基準を満たす  |
    - 状態カラーも背景とのコントラストを確保（例: #DC3545赤と#F8D7DA薄赤で4.63:1）（必須）。
  - **使用ルール**:
    - プライマリは主操作（「4.1」ボタン）や強調に、セカンダリは補助操作（「4.1」）やトースト（「4.5」）に適用（必須）。
    - 状態カラーは通知（「4.5」）、入力エラー（「4.2」）、アイコン（「4.6」）に一貫して使用（必須）。
    - ホバーとフォーカスはプライマリを基調とし、視覚的関連性を保つ（必須）。
    - 背景とテキストは全画面で統一、例外はお客様確認後（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 色の鮮やかさやRGB値を維持           |
    | タブレット  | 768px～1023px | 同上、視認性確保                    |
    | スマホ      | 767px以下      | 背景白、文字黒を固定しコントラスト強化を推奨 |
    - デバイス間で色の鮮やかさやRGB値を維持し、視認性を確保（例: スマホでプライマリが薄くならないよう調整）（必須）。
  - **使用例**:
    | UI要素         | 適用カラー               | 色例（参考）               |
    |----------------|--------------------------|----------------------------|
    | 保存ボタン     | 背景: プライマリ、文字: テキスト | #0078D4（背景）、#FFFFFF（文字） |
    | エラー通知     | 枠線: エラー、背景: エラー背景 | #DC3545（枠線）、#F8D7DA（背景） |
    | フォーカス時   | 枠線: フォーカス         | #E6F0FA                   |
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、コントラスト比4.5:1を全要素で確保。多言語対応（「2.4」）時、色は言語に依存せず一貫。色はアプリごとに選択、例示は参考。お客様確認で確定。コントラスト比の計算にはWebツール（例: [WebAIM Contrast Checker](https://webaim.org/resources/contrastchecker/)）を推奨。


### 5.2 タイポグラフィ（フォント、サイズ、行間）
**要約**: 文字の視認性と一貫性を確保。

- **概要**: 文字の視認性と一貫性を確保するためのタイポグラフィを定義。日本語と英語に対応し、PCを主ターゲットとしつつ、スマホ、タブレットに対応。アクセシビリティ（「2.2」）と多言語対応（「2.4」）を考慮し、フォントサイズは相対単位（rem）で柔軟にスケーリング。
- **設計ルール**:
  - **フォント**:
    - **標準フォント**: Noto Sans Mono CJK JP（日本語と英語に対応、モノスペースで統一感を確保）を推奨。
    - **代替フォント**: システムフォント（例: "monospace", "Segoe UI", "San Francisco"）をフォールバックとして指定（必須）。
    - **選択基準**: 可読性が高く、多言語（特に日本語・英語）を自然にサポート。モノスペースにより、データ入力や一覧表示で整列を保つ。
  - **サイズ**:
    - **基準サイズ**: ルート（`<html>`）に16pxを設定（ブラウザデフォルトを尊重）（必須）。
    - **本文**: 0.875rem（約14px、可読性の基準）を推奨。
    - **見出し**: 1.125rem（約18px、画面タイトル、モーダルタイトル）を推奨。
    - **小テキスト**: 0.75rem（約12px、注釈、ヘルプテキスト）を推奨。
    - **強調テキスト**: 1rem（約16px、通知メッセージ、ボタンラベル）を推奨。
  - **行間**:
    - **デフォルト**: 1.5（例: 0.875rem本文なら約1.31rem）。読みやすさとスペースを確保（推奨）。
    - **密集**: 1.2（例: テーブル内、0.75remなら約0.9rem）。データ量が多い場合（推奨）。
  - **使用ルール**:
    - Noto Sans Mono CJK JPを全画面で統一し、視覚的整合性を保つ（推奨）。
    - 文字色は「5.1」のテキストカラー（例: 黒 #000000）や状態カラー（例: エラー赤 #DC3545）に準拠（必須）。
    - 太字（bold）は強調時のみ使用（例: 見出し、エラーメッセージ）（推奨）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 上記サイズを基準         |
    | タブレット  | 768px～1023px | 同サイズを維持           |
    | スマホ      | 767px以下      | 本文1rem（約16px）、見出し1.25rem（約20px）、小テキスト0.875rem（約14px）で視認性とタップ領域を強化を推奨 |
- **使用例**:
  - ボタン: "保存"（1rem、Noto Sans Mono CJK JP、#FFFFFF on #0078D4）（「4.1」）。
  - 通知: "データ更新が完了しました"（1rem、Noto Sans Mono CJK JP、#000000 on #D4EDDA）（「4.5」）。
  - フォーム見出し: "入力項目"（1.125rem、Noto Sans Mono CJK JP、#000000）（「4.2」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、コントラスト比4.5:1を確保し、ユーザーの文字拡大（200%まで）をサポート。多言語対応（「2.4」）時、Noto Sans Mono CJK JPで日本語・英語をカバー。多言語展開時は別途フォントを選定。フォントウェイトは400（通常）と700（太字）を推奨。

### 5.3 間隔と余白（マージン、パディング）
**要約**: 要素間のスペースを統一。

- **概要**: 要素間のスペースを定義し、視覚的バランスと操作性を確保。PCを主ターゲットとしつつ、スマホ、タブレットに対応。間隔は相対単位（rem）で設定し、一貫性とアクセシビリティ（「2.2」）を考慮。
- **設計ルール**:
  - **基本間隔**:
    - **基準サイズ**: ルート（`<html>`）に16pxを設定（「5.2」準拠）（必須）。
    - **標準マージン**: 1.5rem（約24px、要素間の外側余白）を推奨。
    - **標準パディング**: 1rem（約16px、要素内の内側余白）を推奨。
    - **小間隔**: 0.5rem（約8px、密集する場合）を推奨。
  - **用途ごとのガイド**:
    - **ボタン（「4.1」）**:
      - パディング: 左右1rem（約16px）、上下0.5rem（約8px）を推奨。
      - マージン: 隣接ボタン間0.5rem（約8px）を推奨。
    - **入力フォーム（「4.2」）**:
      - パディング: 内部0.5rem（約8px）を推奨。
      - マージン: 項目間1rem（約16px）、ラベルと入力間0.5rem（約8px）を推奨。
    - **通知（「4.5」）**:
      - パディング: 内部1rem（約16px）を推奨。
      - マージン: 上部1.25rem（約20px、画面上部からの距離）、複数通知間1rem（約16px）を推奨。
    - **テーブル（「4.3」）**:
      - パディング: セル内左右0.5rem（約8px）、上下0.25rem（約4px）を推奨。
      - マージン: テーブル外周1.5rem（約24px）を推奨。
    - **アイコン（「4.6」）**:
      - パディング: アイコンとテキスト間0.5rem（約8px）、単独時周囲0.25rem（約4px）を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 上記サイズを基準         |
    | タブレット  | 768px～1023px | 同サイズを維持           |
    | スマホ      | 767px以下      | マージン1rem（約16px）、パディング0.75rem（約12px）に縮小（密集を緩和）を推奨 |
  - **使用ルール**:
    - 間隔は8px（0.5rem）の倍数を推奨し、グリッド感覚を保つ（例: 0.5rem, 1rem, 1.5rem）。
    - 操作要素（ボタン、入力）のタップ領域は最小44x44pxを確保（余白含む）（必須）。
    - 背景や区切り線（「5.1」「4.6」）との視覚的調和を考慮（必須）。
- **使用例**:
  - 保存ボタン: パディング左右1rem・上下0.5rem、マージン隣接0.5rem（「4.1」）。
  - 通知: パディング1rem、マージン上1.25rem（「4.5」）。
  - フォーム: 項目間マージン1rem、ラベルと入力間0.5rem（「4.2」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、タップ領域44x44pxを確保し、ユーザーの拡大に対応。多言語対応（「2.4」）時、文字列長変化に柔軟（間隔調整はお客様確認）。既存セクション（「4.x」）の値と整合し、必要に応じて微調整。

### 5.4 画像・グラフィックの使用ガイドライン
**要約**: 画像使用ルールを定義。

- **概要**: システム内で使用する画像やグラフィックのルールを定義し、視覚的効果と機能性を確保。PCを主ターゲットとしつつ、スマホ、タブレットに対応。アクセシビリティ（「2.2」）と多言語対応（「2.4」）を考慮。
- **設計ルール**:
  - **用途**:
    - **ロゴ**: システム識別（例: ヘッダーの会社ロゴ、「3.3」）（必須）。
    - **アイコン画像**: 操作や状態の補助（例: カスタムSVG、「4.6」）（必須）。
    - **サムネイル**: データプレビュー（例: テーブル内画像、「4.3」）（必須）。
    - **説明画像**: ヘルプやチュートリアル（例: 操作ガイド）（必須）。
  - **フォーマットと品質**:
    - **フォーマット**: 
      - ベクター: SVG（アイコン、ロゴ、拡大縮小対応）を推奨。
      - ラスター: PNG（透明背景用）、JPEG（写真用）を推奨。
    - **品質**: 
      - SVG: 軽量かつ高解像度（推奨）。
      - PNG/JPEG: 72dpi（Web標準）、最大2MB（アップロード制限例）を推奨。
  - **サイズと配置**:
    - **ロゴ**: 最大幅10rem（約160px）、高さ3rem（約48px）、マージン1rem（約16px）を推奨。
    - **アイコン画像**: 1.5rem（約24px）基準（「4.6」準拠）、パディング0.25rem（約4px）を推奨。
    - **サムネイル**: 幅3rem（約48px）、高さ3rem（約48px）、マージン0.5rem（約8px）を推奨。
    - **説明画像**: 最大幅80%（コンテナ依存）、マージン1.5rem（約24px）を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 上記サイズを基準         |
    | タブレット  | 768px～1023px | ロゴ8rem（約128px）、サムネイル2.5rem（約40px）に縮小を推奨 |
    | スマホ      | 767px以下      | ロゴ6rem（約96px）、サムネイル2rem（約32px）、説明画像幅90%を推奨 |
    - **技術**: `srcset`と`sizes`属性で解像度対応（例: `<img src="low.jpg" srcset="high.jpg 2x">`）を推奨。
  - **使用ルール**:
    - 画像は機能的または装飾的役割を明確化（例: ロゴは識別、サムネイルはプレビュー）（必須）。
    - 色は「5.1」に準拠（例: アイコン画像は状態カラー適用可）（必須）。
    - 余白は「5.3」に準拠（例: マージン1.5rem、パディング1rem）（必須）。
    - 必須でない装飾画像は最小限に（パフォーマンス重視）（推奨）。
  - **アクセシビリティ**:
    - 代替テキスト（alt属性）を全画像に付与（例: `<img src="logo.svg" alt="会社ロゴ">`）（必須）。
    - 装飾画像は`alt=""`で空に（スクリーンリーダー無視）（必須）。
    - コントラスト比4.5:1を背景と確保（「5.1」準拠）（必須）。
- **使用例**:
  - ヘッダーロゴ: SVG、幅10rem、マージン1rem（「3.3」）。
  - テーブルサムネイル: PNG、3rem角、マージン0.5rem（「4.3」）。
  - 通知アイコン: SVG、1.5rem、エラー赤 #DC3545（「4.5」「4.6」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、代替テキスト必須。多言語対応（「2.4」）時、画像内の文字は避け、リソースファイルで管理。ファイルサイズ上限（例: 2MB）はお客様確認後に確定。

## 6. インタラクション設計

### 6.1 ホバー、クリック、タップ時のフィードバック
**要約**: 操作フィードバックを視覚的に提供。

- **概要**: ユーザーの操作（ホバー、クリック、タップ）に対する視覚的・動作的フィードバックを定義し、操作性と状態変化を明確化。PCを主ターゲットとしつつ、スマホ、タブレットに対応。アクセシビリティ（「2.2」）と一貫性（「5.1」「5.3」）を考慮。
- **設計ルール**:
  - **インタラクションの種類**:
    - **ホバー**: マウスカーソルを乗せた状態（PCのみ）（必須）。
    - **クリック**: マウス押下またはタップ後の状態（全デバイス）（必須）。
    - **タップ**: スマホ/タブレットでのタッチ操作（ホバーなし）（必須）。
  - **フィードバック**:
    - **ホバー（PCのみ）**:
      - **色**: 背景を「5.1」のホバーカラー（例: 薄青 #E6F0FA）に変化を推奨。
      - **形状**: カーソルをpointerに（例: `cursor: pointer`）（必須）。
      - **アニメーション**: 0.2秒のフェード（`transition: background-color 0.2s`）を推奨。
    - **クリック/タップ**:
      - **色**: 背景をプライマリ（例: #0078D4）の暗め派生色（例: #005BB5）に変化を推奨。
      - **形状**: ボタンや要素を微縮小（例: `transform: scale(0.95)`）を推奨。
      - **アニメーション**: 0.1秒の縮小後戻り（`transition: transform 0.1s`）を推奨。
    - **フォーカス（キーボード操作）**:
      - **色**: 枠線を「5.1」のフォーカスカラー（例: 薄青 #E6F0FA）に（必須）。
      - **形状**: 2pxの枠線追加（例: `outline: 2px solid #E6F0FA`）（必須）。
      - **アニメーション**: なし（視認性優先）（必須）。
  - **用途ごとのガイド**:
    - **ボタン（「4.1」）**:
      - ホバー: 背景 #E6F0FAを推奨。
      - クリック/タップ: 背景 #005BB5、縮小0.95倍を推奨。
      - フォーカス: 枠線 #E6F0FA（必須）。
    - **テーブル行（「4.3」）**:
      - ホバー: 背景 #F0F0F0を推奨。
      - クリック/タップ: 背景 #E6F0FA（選択状態）を推奨。
      - フォーカス: 枠線 #E6F0FA（必須）。
    - **通知の閉じるボタン（「4.5」）**:
      - ホバー: アイコン色をプライマリ（例: #0078D4）にを推奨。
      - クリック/タップ: アイコン縮小0.95倍を推奨。
      - フォーカス: 枠線 #E6F0FA（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | ホバー有効、上記フィードバックをフル適用 |
    | タブレット  | 768px～1023px | ホバーなし、クリック/タップとフォーカスのみを推奨 |
    | スマホ      | 767px以下      | ホバーなし、タップはクリックと同一、タップ領域44x44px確保（「5.3」準拠）を推奨 |
  - **使用ルール**:
    - フィードバックは「5.1」のカラー（プライマリ、ホバー、フォーカス）に準拠（必須）。
    - アニメーションは短く軽快（0.2秒以下）、過剰な動きは避ける（推奨）。
    - 操作可能な要素（ボタン、リンク）にのみ適用（必須）。
- **使用例**:
  - 保存ボタン: ホバーで #E6F0FA、クリックで #005BB5＋縮小（「4.1」）。
  - テーブル行: ホバーで #F0F0F0、クリックで #E6F0FA（「4.3」）。
  - 通知閉じる: ホバーで #0078D4、クリックで縮小（「4.5」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、フォーカスは視認性高く（枠線2px）。多言語対応（「2.4」）時、フィードバックは言語に依存せず一貫。具体的な色（例: #E6F0FA）は「5.1」例示に依存、最終決定はお客さま確認。

### 6.2 アニメーションとトランジション
**要約**: UIの動きで操作性を強化。

- **概要**: UI要素の動きを定義し、操作の自然さと視覚的フィードバックを強化。PCを主ターゲットとしつつ、スマホ、タブレットに対応。過剰な動きを避け、アクセシビリティ（「2.2」）とパフォーマンスを考慮。
- **設計ルール**:
  - **用途**:
    - **状態変化**: ホバー、クリック、フォーカス時の視覚的変化（「6.1」）（必須）。
    - **表示/非表示**: モーダル、通知の出現・消去（「4.4」「4.5」）（必須）。
    - **操作フィードバック**: ボタン押下、行選択（「4.1」「4.3」）（必須）。
  - **種類と設定**:
    - **トランジション**:
      - **対象**: 色、形状、位置の変化（例: `background-color`, `transform`, `opacity`）（必須）。
      - **時間**: 
        - 短: 0.1秒（クリック/タップ時の縮小）を推奨。
        - 標準: 0.2秒（ホバー、フォーカス、表示切替）を推奨。
      - **緩和曲線**: `ease-in-out`（自然な加速減速）を推奨。
    - **アニメーション**:
      - **対象**: モーダル/通知のフェードイン・アウト（必須）。
      - **時間**: 0.3秒（出現・消去）を推奨。
      - **緩和曲線**: `ease-out`（出現）、`ease-in`（消去）を推奨。
  - **用途ごとのガイド**:
    - **ボタン（「4.1」）**:
      - ホバー: 背景色0.2秒トランジション（例: `#E6F0FA`）を推奨。
      - クリック/タップ: 縮小0.1秒トランジション（`scale(0.95)`）を推奨。
    - **通知（「4.5」）**:
      - 表示: 0.3秒フェードイン（`opacity: 0 → 1`）を推奨。
      - 閉じる: 0.3秒フェードアウト（`opacity: 1 → 0`）を推奨。
    - **モーダル（「4.4」）**:
      - 表示: 0.3秒フェードイン＋上方移動（`opacity: 0 → 1`, `translateY(20px) → 0`）を推奨。
      - 閉じる: 0.3秒フェードアウト＋下方移動（`opacity: 1 → 0`, `translateY(0) → 20px`）を推奨。
    - **テーブル行（「4.3」）**:
      - ホバー: 背景色0.2秒トランジション（例: `#F0F0F0`）を推奨。
      - クリック: 背景色0.2秒トランジション（例: `#E6F0FA`）を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                  |
    |-------------|----------------|---------------------------|
    | PC          | 1024px以上     | 上記設定をフル適用       |
    | タブレット  | 768px～1023px | 同設定、ホバートランジションなしを推奨 |
    | スマホ      | 767px以下      | 同設定、ホバートランジションなし、アニメーション時間は維持を推奨 |
  - **使用ルール**:
    - アニメーションは軽快かつ短時間（0.3秒以下）に限定（推奨）。
    - 「6.1」のフィードバックと整合（例: ホバー0.2秒）（必須）。
    - パフォーマンス重視で、CPU負荷の高い効果（例: 複雑な回転）は避ける（推奨）。
    - アクセシビリティ対応として、動きを無効化する設定を提供（例: `prefers-reduced-motion`対応）（必須）。
- **使用例**:
  - 保存ボタン: ホバーで0.2秒背景変化、クリックで0.1秒縮小（「4.1」）。
  - 通知: 0.3秒フェードインで出現（「4.5」）。
  - モーダル: 0.3秒フェード＋移動で表示（「4.4」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、`prefers-reduced-motion`でアニメーション無効化可能。多言語対応（「2.4」）時、動きは言語に依存せず一貫。時間や緩和曲線は微調整可、お客様確認後に確定。

### 6.3 ローディング状態の表示
**要約**: 処理中の状態を明示。

- **概要**: データ処理や読み込み中の状態をユーザーに伝え、操作性を維持。PCを主ターゲットとしつつ、スマホ、タブレットに対応。アクセシビリティ（「2.2」）と視覚的統一性（「5.1」「6.2」）を考慮。
- **設計ルール**:
  - **用途**:
    - **全画面ローディング**: ページ遷移や初回読み込み時のシステム全体の処理状態（例: ログイン後のデータ取得）（必須）。
    - **部分ローディング**: 特定領域の更新や処理（例: テーブルデータ更新、フォーム送信後のレスポンス待ち）（必須）。
    - **ボタンローディング**: 操作中のボタン単体の処理状態（例: 保存ボタン押下後の処理）（必須）。
  - **デザイン**:
    - **全画面ローディング**:
      - **見た目**: 画面中央にスピナー（直径3rem、約48px）、背景グレー半透明（例: `rgba(0,0,0,0.5)`）でオーバーレイを推奨。
      - **スピナー**: 円形回転アニメーション、プライマリカラー（例: #0078D4）、太さ4pxを推奨。
      - **テキスト**: "読み込み中..."（1rem、約16px）をスピナー下に配置を推奨。
    - **部分ローディング**:
      - **見た目**: 対象領域（例: テーブル、フォーム）の中央にスピナー（直径2rem、約32px）、背景なしを推奨。
      - **スピナー**: 全画面と同じデザイン（縮小版）を推奨。
      - **テキスト**: 状況に応じて"更新中..."（0.875rem、約14px）を推奨。
    - **ボタンローディング**:
      - **見た目**: ボタン内アイコンをスピナー（1.25rem、約20px）に置換、テキスト（例: "保存"）は維持を推奨。
      - **スピナー**: 全画面と同じデザイン（更に縮小版）、ボタンのプライマリカラー（例: #0078D4）を推奨。
      - **状態**: ボタンを無効化（`disabled`属性）し、背景を薄く（例: #CCCCCC）を推奨。
  - **アニメーション**:
    - **種類**: 回転アニメーション（`rotate 0deg → 360deg`）、1秒周期、無限ループ（例: `animation: spin 1s linear infinite`）を推奨。
    - **実装**: CSSアニメーションまたはSVGアニメーション（例: `<circle>`に`stroke-dasharray`）を使用（必須）。
  - **動作ルール**:
    - **表示トリガー**:
      - 全画面: ページ遷移や初回データ取得開始時（必須）。
      - 部分: データ更新や非同期処理開始時（例: APIリクエスト）（必須）。
      - ボタン: ボタン押下時（例: "保存"押下で処理開始）（必須）。
    - **非表示トリガー**:
      - 全画面/部分: 処理完了時（例: データ取得成功/失敗）（必須）。
      - ボタン: 処理完了時、成功なら元に戻し、失敗ならエラー通知（「4.5」）へ移行（必須）。
    - **時間**: 処理が500ms未満の場合、表示を省略（ユーザーの混乱回避）を推奨。
    - **キーボード操作**: ローディング中はフォーカスを移動させず、操作をブロック（必須）。
  - **配置ルール**:
    - 全画面: 画面中央（`position: fixed`、top 50%、left 50%、transform: translate(-50%,-50%)）（必須）。
    - 部分: 対象領域中央（`position: absolute`、コンテナ依存）（必須）。
    - ボタン: ボタン内アイコン位置（例: 左側、`padding-left`調整）（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 上記デザインをフル適用、スピナー3remを推奨 |
    | タブレット  | 768px～1023px | 全画面スピナー2.5rem（約40px）、部分2rem、ボタン1.25remを推奨 |
    | スマホ      | 767px以下      | 全画面スピナー2rem（約32px）、部分1.5rem（約24px）、ボタン1rem（約16px）、テキスト省略可を推奨 |
  - **使用ルール**:
    - スピナーは「5.1」のプライマリカラー（例: #0078D4）に準拠（必須）。
    - アニメーションは「6.2」に準拠（軽快、1秒周期）（必須）。
    - 背景オーバーレイは全画面のみ使用（部分/ボタンは邪魔しない）（推奨）。
    - アクセシビリティ対応として、ARIA属性（例: `aria-busy="true"`）を付与（必須）。
- **使用例**:
  - ページ遷移: 全画面スピナー（3rem、#0078D4）＋"読み込み中..."（「3.x」）。
  - テーブル更新: 部分スピナー（2rem、#0078D4）＋"更新中..."（「4.3」）。
  - 保存ボタン: ボタン内スピナー（1.25rem、#0078D4）＋"保存"（「4.1」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、`aria-busy`で状態伝達。多言語対応（「2.4」）時、"読み込み中..."等はリソースファイルで管理。色は「5.1」に準拠、カスタムスピナー（SVG）はお客様確認後に確定。

### 6.4 エラー処理と回復手順
**要約**: エラー対応と回復を支援。

- **概要**: システムエラーやユーザー操作ミスへの対応と回復手順を定義し、操作継続性を確保。PCを主ターゲットとしつつ、スマホ、タブレットに対応。アクセシビリティ（「2.2」）と通知（「4.5」）に準拠。
- **設計ルール**:
  - **エラーの種類**:
    - **入力エラー**: ユーザーによる入力ミス（例: 必須項目未入力、数値範囲外）（必須）。
    - **システムエラー**: サーバーやネットワーク障害（例: API接続失敗、タイムアウト）（必須）。
    - **操作エラー**: 不正な操作手順（例: 保存前に必須項目未入力で確定）（必須）。
  - **エラー処理**:
    - **入力エラー**:
      - **検出**: クライアント側でリアルタイム検証（例: `required`属性、`pattern`）（必須）。
      - **通知**: 該当フィールドに赤枠（「5.1」エラー #DC3545）、エラーメッセージ（例: "必須項目です"）を直下に表示（必須）。
      - **回復**: ユーザーが修正後、再送信で解消（必須）。
    - **システムエラー**:
      - **検出**: サーバー側でレスポンスコード（例: 500エラー、408タイムアウト）を受信（必須）。
      - **通知**: 「4.5」に準拠し、エラー通知（例: "サーバーに接続できません"）を画面上部に表示（必須）。
      - **回復**: 「再試行」ボタン（「4.1」プライマリ）または手動リロードを提案（必須）。
    - **操作エラー**:
      - **検出**: 操作フローの不整合をチェック（例: 未保存で「確定」押下）（必須）。
      - **通知**: 「4.5」に準拠し、警告通知（例: "保存してください"）を画面上部に表示（必須）。
      - **回復**: 正しい手順をメッセージで示し（例: "先に保存を押してください"）、操作を促す（必須）。
  - **デザイン**:
    - **入力エラー**: フィールド枠線「5.1」エラー（例: #DC3545）、メッセージは0.875rem（約14px）、赤（#DC3545）を推奨。
    - **システム/操作エラー**: 「4.5」に準拠、エラー/警告通知（背景 #F8D7DA、枠線 #DC3545）を推奨。
    - **回復ボタン**: 「4.1」に準拠、プライマリ（例: #0078D4）で「再試行」「OK」を推奨。
  - **動作ルール**:
    - **表示タイミング**:
      - 入力: フォーカス外れ（`onblur`）または送信時（`onsubmit`）（必須）。
      - システム/操作: エラー発生直後（必須）。
    - **閉じる方法**: 通知は手動閉じ（「4.5」準拠）、入力エラーは修正で自動解消（必須）。
    - **キーボード操作**: エラー発生時、フォーカスをエラー箇所（入力）または通知内ボタンに移動（必須）。
  - **ログ**:
    - システムエラーはクライアント側で記録（例: コンソールログ）、必要に応じサーバーに送信を推奨。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 上記デザインと動作をフル適用         |
    | タブレット  | 768px～1023px | 通知幅80%、入力エラーはフィールド直下維持を推奨 |
    | スマホ      | 767px以下      | 通知幅90%、入力エラーはフィールド上部に移動可（スペース確保）を推奨 |
  - **使用ルール**:
    - 通知は「4.5」に準拠、色は「5.1」に準拠（必須）。
    - エラーメッセージは具体的かつ行動指向（例: "日付をYYYY-MM-DDで入力してください"）（必須）。
    - 回復手段を必ず提示（例: 修正、再試行、手動操作）（必須）。
- **使用例**:
  - 必須未入力: 赤枠＋"必須項目です"（「4.2」）。
  - API失敗: エラー通知"サーバーに接続できません"＋「再試行」ボタン（「4.5」）。
  - 操作ミス: 警告通知"保存してください"（「4.5」）。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）に準拠、`aria-invalid`で入力エラー、`aria-live`で通知を伝達。多言語対応（「2.4」）時、エラーメッセージはリソースファイルで管理。ログ仕様やエラーコード詳細はお客様確認後に確定。

## 7. 業務特化の設計ルール

### 7.1 データ入力画面の標準化
**要約**: データ入力画面を標準化。

- **概要**: データ入力画面のレイアウトと動作を標準化し、効率性と一貫性を確保。PCを主ターゲットとしつつ、スマホ、タブレットに対応。「3.x」「4.x」に準拠。
- **設計ルール**:
  - **レイアウト**:
    - 「3.4」に準拠、上部にタイトル、中央にフォーム（「4.2」）、下部右にアクションボタン（「4.1」）（必須）。
    - 12列グリッドを推奨、入力項目は左6列、説明や補足は右6列（例: "氏名"入力＋"例: 山田太郎"）を推奨。
  - **構成**:
    - **入力項目**: 「4.2」に準拠、テキスト、ドロップダウン等を配置（必須）。
    - **ラベル**: 「4.7」に準拠、各入力に付随（必須）。
    - **ボタン**: 「4.1」に準拠、「保存」「キャンセル」を最低限配置（必須）。
  - **動作**:
    - 入力エラーは「6.4」に準拠、リアルタイム検証と通知（必須）。
    - 保存は「保存」ボタン押下で確定、キャンセルで破棄（必須）。
    - ローディングは「6.3」に準拠、送信中にボタンスピナー表示（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 横並びレイアウト、12列グリッドを推奨 |
    | タブレット  | 768px～1023px | 6列ずつ縦並び、ボタン下部中央を推奨 |
    | スマホ      | 767px以下      | 12列縦並び、単票としてレスポンシブ対応を推奨 |
- **使用例**:
  - 新規登録画面: 上部"新規登録"、中央に"氏名""部署"入力、下部右に「保存」「キャンセル」。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）、多言語対応（「2.4」）に準拠。スマホで編集が必要な場合、専用画面を推奨（「2.3」参照）。

### 7.2 検索機能
**要約**: 検索機能を標準化。

- **概要**: 検索機能の設計を標準化し、データへの迅速なアクセスを支援。PCを主ターゲットとしつつ、スマホ、タブレットに対応。「4.x」に準拠。
- **設計ルール**:
  - **レイアウト**:
    - 「3.4」に準拠、検索ボックス（「4.2」）を上部に、結果テーブル（「4.3」）を中央に配置（必須）。
    - 検索ボタン（「4.1」プライマリ、例: `mdi-magnify`＋"検索"）を検索ボックス右に配置（必須）。
  - **構成**:
    - **検索ボックス**: テキスト入力（例: `<input type="text" placeholder="キーワード">`）（必須）。
    - **フィルター**: ドロップダウンやチェックボックスで条件追加（例: "部署"選択）を推奨。
    - **結果**: 「4.3」に準拠、テーブル形式で表示（必須）。
  - **動作**:
    - 入力後Enterまたは検索ボタンで検索実行（必須）。
    - ローディングは「6.3」に準拠、部分スピナーで結果待機（必須）。
    - エラーは「6.4」に準拠、通知で伝達（例: "結果が見つかりません"）（必須）。
  - **レスポンシブ対応**:
    | デバイス    | 幅範囲         | 対応方針                              |
    |-------------|----------------|---------------------------------------|
    | PC          | 1024px以上     | 横並び検索＋テーブル表示を推奨       |
    | タブレット  | 768px～1023px | 検索ボックス幅80%、テーブル横スクロールを推奨 |
    | スマホ      | 767px以下      | 検索ボックス幅90%、結果はカード形式または専用画面を選択可能 |
- **使用例**:
  - 社員検索: 上部に"社員名"入力＋「検索」、中央に社員一覧テーブル。
- **注記**:
  > **注**: アクセシビリティ（「2.2」）、多言語対応（「2.4」）に準拠。スマホで複雑な検索の場合、専用画面を推奨（「2.3」参照）。

---

# お客様にヒアリングすべき項目
| 分類         | 確認項目                           | 関連セクション |
|--------------|------------------------------------|----------------|
| ユーザー環境 | 対象ユーザー層（部署、役職、スキルレベル） | 1.2            |
| ユーザー環境 | 主な利用デバイスと割合             | 2.3            |
| ユーザー環境 | 利用シーン（オフィス、テレワーク等） | 1.2            |
| 業務要件     | システムの主目的                   | -              |
| 業務要件     | 優先業務フロー                     | -              |
| 設計原則     | 直感的、効率的、一貫性の優先度     | 2.1            |
| 設計原則     | 対応言語と優先順位                 | 2.4            |
| 設計原則     | 地域設定（locale）の必要性         | 2.4            |
| 設計原則     | 言語切り替えの方法                 | 2.4            |
| デザイン     | ブランドガイドライン               | 5.1            |
| 技術的制約   | 技術スタック                       | -              |
| 技術的制約   | パフォーマンス要件                 | -              |
| 技術的制約   | セキュリティ要件                   | -              |
| アクセシビリティ | アクセシビリティ対応の必要性   | 2.2            |
| 運用・保守   | 保守担当者                         | -              |
| 運用・保守   | 更新頻度                           | -              |
| その他       | 既存の問題点                       | -              |
| その他       | 導入スケジュール                   | -              |